#compdef odoo odoo

_odoo() {
  local curcontext="$curcontext" state line
  typeset -A opt_args

  _arguments -C \
    '(-h --help)'{-h,--help}'[Show help text]' \
    '--version[Show Odoo version]' \
    '(-d --database)'{-d,--database}'[Specify database(s) to use]:database:_files' \
    '(-i --init)'{-i,--init}'[Modules to install]:modules:' \
    '(-u --update)'{-u,--update}'[Modules to update]:modules:' \
    '--addons-path[Directories to scan for modules]:directories:_files -/' \
    '--upgrade-path[Additional upgrade path]:path:_files -/' \
    '--load[Server-wide modules to load]:modules:' \
    '(-c --config)'{-c,--config}'[Path to alternate config file]:config file:_files' \
    '(-D --data-dir)'{-D,--data-dir}'[Directory to store Odoo data]:directory:_files -/' \
    '(-s --save)'{-s,--save}'[Save server configuration]' \
    '--without-demo[Disable demo data loading]:modules:' \
    '--pidfile[Path to store server pid]:pidfile:_files' \
    '--stop-after-init[Stop server after initialization]' \
    '--geoip-city-db[Path to GeoIP City database]:file:_files' \
    '--geoip-country-db[Path to GeoIP Country database]:file:_files' \
    '--test-enable[Run tests after module installation]' \
    '--test-file[Run a python test file]:file:_files -g "*.py"' \
    '--test-tags[Filter which tests to execute]:tags:' \
    '--screenshots[Directory to write test screenshots]:directory:_files -/' \
    '--screencasts[Directory to write test screencasts]:directory:_files -/' \
    '(-r --db_user)'{-r,--db_user}'[Database username]:username:' \
    '(-w --db_password)'{-w,--db_password}'[Database password]:password:' \
    '--db_host[Database host]:hostname:_hosts' \
    '--db_port[Database port]:port:' \
    '--db-filter[Hide databases not matching filter]:filter:' \
    '--db-template[Template for new databases]:template:' \
    '--pg_path[Path to PostgreSQL binaries]:path:_files -/' \
    '--no-database-list[Suppress database listing]' \
    '--db_sslmode[PostgreSQL SSL mode]:mode:(disable allow prefer require verify-ca verify-full)' \
    '--unaccent[Enable unaccent extension for new databases]' \
    '--email-from[Email address for FROM field]:email:' \
    '--from-filter[Email address or domain for SMTP filter]:filter:' \
    '--smtp[SMTP server address]:server:_hosts' \
    '--smtp-port[SMTP server port]:port:' \
    '--smtp-ssl[Use SSL/STARTSSL for SMTP]' \
    '--smtp-user[SMTP username]:username:' \
    '--smtp-password[SMTP password]:password:' \
    '--smtp-ssl-certificate-filename[Path to SSL certificate]:file:_files' \
    '--smtp-ssl-private-key-filename[Path to SSL private key]:file:_files' \
    '--load-language[Languages to load]:languages:' \
    '(-l --language)'{-l,--language}'[Language for translation file]:language:' \
    '--i18n-export[Export translations to file]:file:_files' \
    '--i18n-import[Import translations from file]:file:_files' \
    '--i18n-overwrite[Overwrite existing translations]' \
    '--modules[Specify modules to export]:modules:' \
    '--dev[Enable developer features]:features:_values -s , features all xml reload qweb "(i)p(u)db" werkzeug' \
    '--no-http[Do not start HTTP workers]' \
    '--http-interface[HTTP server interface]:interface:_ip_addresses' \
    '(-p --http-port)'{-p,--http-port}'[HTTP server port]:port:' \
    '--gevent-port[Gevent websocket port]:port:' \
    '--proxy-mode[Enable proxy mode]' \
    '--x-sendfile[Use X-Sendfile for file streaming]' \
    '--logfile[Log to file instead of stderr]:file:_files' \
    '--syslog[Log to syslog]' \
    '--log-db[Log to database]:database:' \
    '--log-handler[Configure a log handler]:spec:' \
    '--log-web[Enable DEBUG logging of HTTP requests]' \
    '--log-sql[Enable DEBUG logging of SQL queries]' \
    '--log-level[Set logging level]:level:(critical error warn debug debug_sql debug_rpc debug_rpc_answer)' \
    '--workers[Number of workers to use]:count:'

}

_odoo "$@"
